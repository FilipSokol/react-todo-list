{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","type","className","placeholder","value","onChange","e","target","onClick","preventDefault","text","completed","id","Math","random","Todo","todo","map","item","filter","el","TodoList","App","useState","useEffect","getLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA8BeA,EA5BF,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAU9C,OACE,iCACE,uBACEC,KAAK,OACLC,UAAU,aACVC,YAAY,WACZC,MAAOP,EACPQ,SAAU,SAACC,GACTR,EAAaQ,EAAEC,OAAOH,UAG1B,wBAAQH,KAAK,SAASC,UAAU,cAAcM,QApBxB,SAACF,GACzBA,EAAEG,iBACFT,EAAS,GAAD,mBACHD,GADG,CAEN,CAAEW,KAAMb,EAAWc,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAEhDhB,EAAa,KAcX,qB,OCaSiB,EAlCF,SAAC,GAAqC,IAAnCL,EAAkC,EAAlCA,KAAMM,EAA4B,EAA5BA,KAAMjB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAmBjC,OACE,sBAAKE,UAAU,OAAf,UACE,oBAAIA,UAAS,oBAAec,EAAKL,UAAY,YAAc,IAA3D,SACGD,IAEH,wBAAQR,UAAU,eAAeM,QAnBb,WACtBR,EACED,EAAMkB,KAAI,SAACC,GACT,OAAIA,EAAKN,KAAOI,EAAKJ,GACZ,2BACFM,GADL,IAEEP,WAAYO,EAAKP,YAGdO,OAUT,SACE,mBAAGhB,UAAU,iBAEf,wBAAQA,UAAU,YAAYM,QA1BZ,WACpBR,EAASD,EAAMoB,QAAO,SAACC,GAAD,OAAQA,EAAGR,KAAOI,EAAKJ,QAyB3C,SACE,mBAAGV,UAAU,qBCPNmB,EApBE,SAAC,GAAyB,IAAvBtB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACE,mCACE,qBAAKE,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SACGH,EAAMkB,KAAI,SAACD,GAAD,OACT,cAAC,EAAD,CACEjB,MAAOA,EACPC,SAAUA,EACVU,KAAMM,EAAKN,KAEXM,KAAMA,GADDA,EAAKJ,c,MCqCTU,MA7Cf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACN1B,EADM,KACKC,EADL,OAEayB,mBAAS,IAFtB,mBAENxB,EAFM,KAECC,EAFD,KAIbwB,qBAAU,WACRC,MACC,IAEHD,qBAAU,WAENE,aAAaC,QAAQ,QAASC,KAAKC,UAAU9B,MAG9C,CAACA,IAEJ,IAAM0B,EAAgB,WACpB,GAAsC,OAAlCC,aAAaI,QAAQ,SACvBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACL,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChD9B,EAAS+B,KAIb,OACE,sBAAK7B,UAAU,MAAf,UACE,iCACE,6CAEF,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CACEL,UAAWA,EACXC,aAAcA,EACdC,MAAOA,EACPC,SAAUA,IAEZ,0BAEF,cAAC,EAAD,CAAUD,MAAOA,EAAOC,SAAUA,WChC3BiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f6c4e1a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos }) => {\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 },\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        placeholder=\"New Task\"\r\n        value={inputText}\r\n        onChange={(e) => {\r\n          setInputText(e.target.value);\r\n        }}\r\n      />\r\n      <button type=\"submit\" className=\"todo-button\" onClick={submitTodoHandler}>\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button className=\"complete-btn\" onClick={completeHandler}>\r\n        <i className=\"gg-check-o\"></i>\r\n      </button>\r\n      <button className=\"trash-btn\" onClick={deleteHandler}>\r\n        <i className=\"gg-close-o\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos }) => {\r\n  return (\r\n    <>\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n          {todos.map((todo) => (\r\n            <Todo\r\n              todos={todos}\r\n              setTodos={setTodos}\r\n              text={todo.text}\r\n              key={todo.id}\r\n              todo={todo}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    };\n    saveLocalTodos();\n  }, [todos]);\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <div className=\"container\">\n        <div className=\"form-container\">\n          <Form\n            inputText={inputText}\n            setInputText={setInputText}\n            todos={todos}\n            setTodos={setTodos}\n          />\n          <hr />\n        </div>\n        <TodoList todos={todos} setTodos={setTodos} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}